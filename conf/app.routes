# microservice specific routes

->         /hmrc-frontend                               hmrcfrontend.Routes

GET        /                                            controllers.IndexController.onPageLoad

GET        /assets/*file                                controllers.Assets.versioned(path="/public", file: Asset)

GET        /language/:lang                              controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET        /refresh-session                             controllers.KeepAliveController.keepAlive

GET        /there-is-a-problem                          controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET        /check-your-answers                          controllers.CheckYourAnswersController.onPageLoad

GET        /account/sign-out-survey                     controllers.auth.AuthController.signOut
GET        /account/sign-out                            controllers.auth.AuthController.signOutNoSurvey
GET        /account/signed-out                          controllers.auth.SignedOutController.onPageLoad

GET        /unauthorised                                controllers.UnauthorisedController.onPageLoad

GET        /accountHome                               controllers.AccountHomeController.onPageLoad()

GET        /nameOfGoods                        controllers.NameOfGoodsController.onPageLoad(mode: Mode = NormalMode)
POST       /nameOfGoods                        controllers.NameOfGoodsController.onSubmit(mode: Mode = NormalMode)
GET        /changeNameOfGoods                  controllers.NameOfGoodsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeNameOfGoods                  controllers.NameOfGoodsController.onSubmit(mode: Mode = CheckMode)

GET        /valuationMethod                        controllers.ValuationMethodController.onPageLoad(mode: Mode = NormalMode)
POST       /valuationMethod                        controllers.ValuationMethodController.onSubmit(mode: Mode = NormalMode)
GET        /changeValuationMethod                  controllers.ValuationMethodController.onPageLoad(mode: Mode = CheckMode)
POST       /changeValuationMethod                  controllers.ValuationMethodController.onSubmit(mode: Mode = CheckMode)

GET        /commodityCode                        controllers.CommodityCodeController.onPageLoad(mode: Mode = NormalMode)
POST       /commodityCode                        controllers.CommodityCodeController.onSubmit(mode: Mode = NormalMode)
GET        /changeCommodityCode                  controllers.CommodityCodeController.onPageLoad(mode: Mode = CheckMode)
POST       /changeCommodityCode                  controllers.CommodityCodeController.onSubmit(mode: Mode = CheckMode)

GET        /hasCommodityCode                        controllers.HasCommodityCodeController.onPageLoad(mode: Mode = NormalMode)
POST       /hasCommodityCode                        controllers.HasCommodityCodeController.onSubmit(mode: Mode = NormalMode)
GET        /changeHasCommodityCode                  controllers.HasCommodityCodeController.onPageLoad(mode: Mode = CheckMode)
POST       /changeHasCommodityCode                  controllers.HasCommodityCodeController.onSubmit(mode: Mode = CheckMode)

GET        /contactPage                       controllers.ContactPageController.onPageLoad()

GET        /importGoods                        controllers.ImportGoodsController.onPageLoad(mode: Mode = NormalMode)
POST       /importGoods                        controllers.ImportGoodsController.onSubmit(mode: Mode = NormalMode)
GET        /changeImportGoods                  controllers.ImportGoodsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeImportGoods                  controllers.ImportGoodsController.onSubmit(mode: Mode = CheckMode)

GET        /publicInformationNotice                       controllers.PublicInformationNoticeController.onPageLoad()

GET        /requiredInformation                        controllers.RequiredInformationController.onPageLoad()
POST       /requiredInformation                        controllers.RequiredInformationController.onSubmit()

GET        /confidentialInformation                        controllers.ConfidentialInformationController.onPageLoad(mode: Mode = NormalMode)
POST       /confidentialInformation                        controllers.ConfidentialInformationController.onSubmit(mode: Mode = NormalMode)
GET        /changeConfidentialInformation                  controllers.ConfidentialInformationController.onPageLoad(mode: Mode = CheckMode)
POST       /changeConfidentialInformation                  controllers.ConfidentialInformationController.onSubmit(mode: Mode = CheckMode)

GET        /whatCountryAreGoodsFrom                        controllers.WhatCountryAreGoodsFromController.onPageLoad(mode: Mode = NormalMode)
POST       /whatCountryAreGoodsFrom                        controllers.WhatCountryAreGoodsFromController.onSubmit(mode: Mode = NormalMode)
GET        /changeWhatCountryAreGoodsFrom                  controllers.WhatCountryAreGoodsFromController.onPageLoad(mode: Mode = CheckMode)
POST       /changeWhatCountryAreGoodsFrom                  controllers.WhatCountryAreGoodsFromController.onSubmit(mode: Mode = CheckMode)

GET        /areGoodsShippedDirectly                        controllers.AreGoodsShippedDirectlyController.onPageLoad(mode: Mode = NormalMode)
POST       /areGoodsShippedDirectly                        controllers.AreGoodsShippedDirectlyController.onSubmit(mode: Mode = NormalMode)
GET        /changeAreGoodsShippedDirectly                  controllers.AreGoodsShippedDirectlyController.onPageLoad(mode: Mode = CheckMode)
POST       /changeAreGoodsShippedDirectly                  controllers.AreGoodsShippedDirectlyController.onSubmit(mode: Mode = CheckMode)

GET        /describeTheGoods                        controllers.DescribeTheGoodsController.onPageLoad(mode: Mode = NormalMode)
POST       /describeTheGoods                        controllers.DescribeTheGoodsController.onSubmit(mode: Mode = NormalMode)
GET        /changeDescribeTheGoods                  controllers.DescribeTheGoodsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeDescribeTheGoods                  controllers.DescribeTheGoodsController.onSubmit(mode: Mode = CheckMode)

GET        /howAreTheGoodsMade                        controllers.HowAreTheGoodsMadeController.onPageLoad(mode: Mode = NormalMode)
POST       /howAreTheGoodsMade                        controllers.HowAreTheGoodsMadeController.onSubmit(mode: Mode = NormalMode)
GET        /changeHowAreTheGoodsMade                  controllers.HowAreTheGoodsMadeController.onPageLoad(mode: Mode = CheckMode)
POST       /changeHowAreTheGoodsMade                  controllers.HowAreTheGoodsMadeController.onSubmit(mode: Mode = CheckMode)

GET        /hasConfidentialInformation                        controllers.HasConfidentialInformationController.onPageLoad(mode: Mode = NormalMode)
POST       /hasConfidentialInformation                        controllers.HasConfidentialInformationController.onSubmit(mode: Mode = NormalMode)
GET        /changeHasConfidentialInformation                  controllers.HasConfidentialInformationController.onPageLoad(mode: Mode = CheckMode)
POST       /changeHasConfidentialInformation                  controllers.HasConfidentialInformationController.onSubmit(mode: Mode = CheckMode)

GET        /priceOfGoods                              controllers.PriceOfGoodsController.onPageLoad(mode: Mode = NormalMode)
POST       /priceOfGoods                              controllers.PriceOfGoodsController.onSubmit(mode: Mode = NormalMode)
GET        /changePriceOfGoods                        controllers.PriceOfGoodsController.onPageLoad(mode: Mode = CheckMode)
POST       /changePriceOfGoods                        controllers.PriceOfGoodsController.onSubmit(mode: Mode = CheckMode)

GET        /importingGoods                            controllers.ImportingGoodsController.onPageLoad()

GET        /checkRegisteredDetails                        controllers.CheckRegisteredDetailsController.onPageLoad(mode: Mode = NormalMode)
POST       /checkRegisteredDetails                        controllers.CheckRegisteredDetailsController.onSubmit(mode: Mode = NormalMode)
GET        /changeCheckRegisteredDetails                  controllers.CheckRegisteredDetailsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeCheckRegisteredDetails                  controllers.CheckRegisteredDetailsController.onSubmit(mode: Mode = CheckMode)

GET        /mustHaveCommodityCode                       controllers.MustHaveCommodityCodeController.onPageLoad()

GET        /applicationContactDetails                        controllers.ApplicationContactDetailsController.onPageLoad(mode: Mode = NormalMode)
POST       /applicationContactDetails                        controllers.ApplicationContactDetailsController.onSubmit(mode: Mode = NormalMode)
GET        /changeApplicationContactDetails                  controllers.ApplicationContactDetailsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeApplicationContactDetails                  controllers.ApplicationContactDetailsController.onSubmit(mode: Mode = CheckMode)

GET        /eoriBeUpToDate                       controllers.EORIBeUpToDateController.onPageLoad()

GET        /hasConfidentialInformation                        controllers.HasConfidentialInformationController.onPageLoad(mode: Mode = NormalMode)
POST       /hasConfidentialInformation                        controllers.HasConfidentialInformationController.onSubmit(mode: Mode = NormalMode)
GET        /changeHasConfidentialInformation                  controllers.HasConfidentialInformationController.onPageLoad(mode: Mode = CheckMode)
POST       /changeHasConfidentialInformation                  controllers.HasConfidentialInformationController.onSubmit(mode: Mode = CheckMode)

GET        /doYouWantToUploadDocuments                        controllers.DoYouWantToUploadDocumentsController.onPageLoad(mode: Mode = NormalMode)
POST       /doYouWantToUploadDocuments                        controllers.DoYouWantToUploadDocumentsController.onSubmit(mode: Mode = NormalMode)
GET        /changeDoYouWantToUploadDocuments                  controllers.DoYouWantToUploadDocumentsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeDoYouWantToUploadDocuments                  controllers.DoYouWantToUploadDocumentsController.onSubmit(mode: Mode = CheckMode)

GET        /isThisFileConfidential                        controllers.IsThisFileConfidentialController.onPageLoad(mode: Mode = NormalMode)
POST       /isThisFileConfidential                        controllers.IsThisFileConfidentialController.onSubmit(mode: Mode = NormalMode)
GET        /changeIsThisFileConfidential                  controllers.IsThisFileConfidentialController.onPageLoad(mode: Mode = CheckMode)
POST       /changeIsThisFileConfidential                  controllers.IsThisFileConfidentialController.onSubmit(mode: Mode = CheckMode)

GET        /uploadAnotherSupportingDocument                        controllers.UploadAnotherSupportingDocumentController.onPageLoad(mode: Mode = NormalMode)
POST       /uploadAnotherSupportingDocument                        controllers.UploadAnotherSupportingDocumentController.onSubmit(mode: Mode = NormalMode)
GET        /changeUploadAnotherSupportingDocument                  controllers.UploadAnotherSupportingDocumentController.onPageLoad(mode: Mode = CheckMode)
POST       /changeUploadAnotherSupportingDocument                  controllers.UploadAnotherSupportingDocumentController.onSubmit(mode: Mode = CheckMode)

GET        /uploadSupportingDocuments                       controllers.fileupload.UploadSupportingDocumentsController.onPageLoad(errorCode: Option[String], key: Option[String],  uploadId: Option[models.fileupload.UploadId])

GET        /explainReasonComputedValue                        controllers.ExplainReasonComputedValueController.onPageLoad(mode: Mode = NormalMode)
POST       /explainReasonComputedValue                        controllers.ExplainReasonComputedValueController.onSubmit(mode: Mode = NormalMode)
GET        /changeExplainReasonComputedValue                  controllers.ExplainReasonComputedValueController.onPageLoad(mode: Mode = CheckMode)
POST       /changeExplainReasonComputedValue                  controllers.ExplainReasonComputedValueController.onSubmit(mode: Mode = CheckMode)

GET        /whyComputedValue                        controllers.WhyComputedValueController.onPageLoad(mode: Mode = NormalMode)
POST       /whyComputedValue                        controllers.WhyComputedValueController.onSubmit(mode: Mode = NormalMode)
GET        /changeWhyComputedValue                  controllers.WhyComputedValueController.onPageLoad(mode: Mode = CheckMode)
POST       /changeWhyComputedValue                  controllers.WhyComputedValueController.onSubmit(mode: Mode = CheckMode)

GET        /haveYouUsedMethodOneInPast                        controllers.HaveYouUsedMethodOneInPastController.onPageLoad(mode: Mode = NormalMode)
POST       /haveYouUsedMethodOneInPast                        controllers.HaveYouUsedMethodOneInPastController.onSubmit(mode: Mode = NormalMode)
GET        /changeHaveYouUsedMethodOneInPast                  controllers.HaveYouUsedMethodOneInPastController.onPageLoad(mode: Mode = CheckMode)
POST       /changeHaveYouUsedMethodOneInPast                  controllers.HaveYouUsedMethodOneInPastController.onSubmit(mode: Mode = CheckMode)

GET        /whyTransactionValueOfSimilarGoods                        controllers.WhyTransactionValueOfSimilarGoodsController.onPageLoad(mode: Mode = NormalMode)
POST       /whyTransactionValueOfSimilarGoods                        controllers.WhyTransactionValueOfSimilarGoodsController.onSubmit(mode: Mode = NormalMode)
GET        /changeWhyTransactionValueOfSimilarGoods                  controllers.WhyTransactionValueOfSimilarGoodsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeWhyTransactionValueOfSimilarGoods                  controllers.WhyTransactionValueOfSimilarGoodsController.onSubmit(mode: Mode = CheckMode)

GET        /whyIdenticalGoods                        controllers.WhyIdenticalGoodsController.onPageLoad(mode: Mode = NormalMode)
POST       /whyIdenticalGoods                        controllers.WhyIdenticalGoodsController.onSubmit(mode: Mode = NormalMode)
GET        /changeWhyIdenticalGoods                  controllers.WhyIdenticalGoodsController.onPageLoad(mode: Mode = CheckMode)
POST       /changeWhyIdenticalGoods                  controllers.WhyIdenticalGoodsController.onSubmit(mode: Mode = CheckMode)


# upload file notification callback
+ nocsrf
POST       /upscan-callback         controllers.fileupload.UploadCallbackController.callback